@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject Microsoft.Extensions.Localization.IStringLocalizer<Local> Loc
<Row>
    @if (WalletState.Value.IsLoading)
    {
        <CircleLoading></CircleLoading>
    }
    <Column ColumnSize="ColumnSize.Is12">
        <AdvancedTimer IntervalInMilisec="60000" DelayInMilisec="60000" Occurring="@Times.Infinite()" OnIntervalElapsed="@(c => { LoadWalletsAsync(); })" />
        <AdvancedTimer IntervalInMilisec="3600000" DelayInMilisec="60000" Occurring="@Times.Infinite()" OnIntervalElapsed="@(c => { LoadPoolInfoAsync(); })" />
        <PoolInfoComponent PoolInfo="@WalletState.Value.CurrentPoolInfo" Wallets="@WalletState.Value.CurrentWallets" LastUpdate="@WalletState.Value.LastUpdate"></PoolInfoComponent>
        @foreach (var wallet in WalletState.Value.CurrentWallets.DefaultIfNullOrEmpty())
        {
            <WalletComponent PoolInfo="@WalletState.Value.CurrentPoolInfo" Wallets="@WalletState.Value.CurrentWallets" Wallet="@wallet" PoolInfoUrl="@Configuration.PoolUrl"></WalletComponent>
        }

        @foreach (var wallet in WalletState.Value.CurrentWallets.DefaultIfNullOrEmpty())
        {
            @foreach (var worker in wallet.Workers.DefaultIfNullOrEmpty())
            {
                <WorkerComponent PoolInfo="@WalletState.Value.CurrentPoolInfo" Wallets="@WalletState.Value.CurrentWallets" Wallet="@wallet" Worker="@worker"></WorkerComponent>
            }
        }

    </Column>
</Row>